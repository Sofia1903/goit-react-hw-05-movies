{"version":3,"file":"static/js/397.e9b1675a.chunk.js","mappings":"uQAAA,IAAMA,EAAM,gCAENC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAiB,WAC5B,IAAMC,EAAG,UAAMP,EAAN,mCAIT,OAFaQ,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAG1C,EACYC,EAAe,SAAAC,GAC1B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,mBAIT,OAFaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAG1C,EAEYG,EAAoB,SAAAD,GAC/B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,2BAGT,OADaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,EACYI,EAAoB,SAAAF,GAC/B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,kCAGT,OADaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,EAEYK,EAAiB,SAAAC,GAC5B,IAAMV,EAAG,UAAMP,EAAN,8BAA+BiB,EAA/B,8CAGT,OADaT,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,C,8ECnBD,UApBqB,WACnB,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAkBG,GACjBT,MAAK,SAAAC,GAAG,OAAIY,EAAQZ,EAAZ,GACV,GAAE,CAACQ,KAEF,8BACK,OAACG,QAAD,IAACA,GAAAA,EAAMG,QAAQC,OAA8DJ,EAAKG,QAAQE,KAAI,SAAAC,GAAM,OACjG,4BACI,sCAAcA,EAAOC,WACrB,uBAAID,EAAOE,YAFLF,EAAOd,GADgF,KAA3E,qEASjC,C","sources":["api/API.jsx","components/Movie/AddInfo/MovieReviews.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMDY5NDYxNzVhYmE4NGVjMWZlYjNhNjAzNWVmZGI0ZCIsInN1YiI6IjY0ODhiNzRmOTkyNTljMDBmZjEwOGVhOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.W8hYuQw3SpaFp3KuXamF2ZGzm3w0X0SsPIxY8a5WkFQ',\n  },\n};\nexport const getTrendingAll = () => {\n  const url = `${URL}trending/all/day?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n\n  return data;\n};\nexport const getMovieById = id => {\n  const url = `${URL}movie/${id}?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n\n  return data;\n};\n\nexport const getMovieIdCredits = id => {\n  const url = `${URL}movie/${id}/credits?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};\nexport const getMovieIdReviews = id => {\n  const url = `${URL}movie/${id}/reviews?language=en-US&page=1`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};\n\nexport const getSearchMovie = search => {\n  const url = `${URL}search/movie?query=${search}&include_adult=false&language=en-US&page=1`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};","import { getMovieIdReviews } from 'api/API';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState();\n  useEffect(() => {\n    getMovieIdReviews(movieId)\n    .then(res => setData(res));\n  }, [movieId]);\n  return (\n    <>\n        {!data?.results.length ? (<p>We don't have any reviews for this movie</p>) : (data.results.map(review => (\n            <div key={review.id}>\n                <h3> Author: {review.author}</h3>\n                <p>{review.content}</p>\n            </div>\n            ))\n        )}\n    </>\n    )\n};\n\nexport default MovieReviews;\n\n"],"names":["URL","options","method","headers","accept","Authorization","getTrendingAll","url","fetch","then","res","json","getMovieById","id","getMovieIdCredits","getMovieIdReviews","getSearchMovie","search","movieId","useParams","useState","data","setData","useEffect","results","length","map","review","author","content"],"sourceRoot":""}