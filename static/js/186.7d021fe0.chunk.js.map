{"version":3,"file":"static/js/186.7d021fe0.chunk.js","mappings":"8LAiDA,UA7CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXE,EAAAA,EAAAA,IAAeR,GACZS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAQM,GACRJ,GAAW,EACZ,IACAK,OAAM,SAAAC,GACLC,QAAQC,MAAM,SAAUF,GACxBN,GAAW,EACZ,GACJ,GAAE,CAACN,IAEAK,GACK,sCAGI,OAATF,EACK,KAGW,IAAhBA,EAAKY,QACA,8CAIP,wBACGZ,EAAKa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EAKZ,KAGN,C,sBC/CD,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOf,GAEP,YADAS,EAAOT,EAET,CAEIc,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOpB,KAAKe,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOb,GACdQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASb,EACnE,CAEAY,OAAMe,EACR,GACF,CACF,C,uJClCMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAiB,6BAAG,oGACLC,MACjB,iEACAN,GAHsB,cAClBrC,EADkB,yBAKjBA,EAAK4C,QALY,2CAAH,qDAQjBC,EAAe,6BAAG,WAAMC,GAAN,uFACHH,MAAM,mDAAD,OAC6BG,EAD7B,8CAEtBT,GAHoB,cAChBrC,EADgB,yBAKfA,EAAK4C,QALU,2CAAH,sDAQfG,EAAY,6BAAG,WAAMlD,GAAN,uFACA8C,MAAM,sCAAD,OACgB9C,EADhB,mBAEtBwC,GAHiB,cACbrC,EADa,yBAKZA,EAAK4C,QALO,2CAAH,sDAQZI,EAAc,6BAAG,WAAMnD,GAAN,uFACF8C,MAAM,sCAAD,OACgB9C,EADhB,2BAEtBwC,GAHmB,cACfrC,EADe,yBAKdA,EAAK4C,QALS,2CAAH,sDAQdvC,EAAc,6BAAG,WAAMR,GAAN,uFACF8C,MAAM,sCAAD,OACgB9C,EADhB,kCAEtBwC,GAHmB,cACfrC,EADe,yBAKdA,EAAK4C,QALS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/FetchApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { getReviewsById } from 'service/FetchApi';\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getReviewsById(movieId)\n      .then(({ results }) => {\n        setData(results);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error:', err);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (data === null) {\n    return null;\n  }\n\n  if (data.length === 0) {\n    return <p>No reviews found.</p>;\n  }\n\n  return (\n    <ul>\n      {data.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NWE3MTViMjhiYzlhNTc2ZWQ2MzkzZjYzYjllMjlmOCIsInN1YiI6IjY0N2ZhYTRlY2E3ZWM2MDEzOTAwNDkzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4uBK7cn8JGhy1huwgClr31nT-u15Nkxz-Rq5SsBaK6g',\n  },\n};\n\nconst getTrendingMovies = async () => {\n  const data = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n  return data.json();\n};\n\nconst getSearchMovies = async query => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return data.json();\n};\n\nconst getMovieById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  return data.json();\n};\n\nconst getCreditsById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return data.json();\n};\n\nconst getReviewsById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return data.json();\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieById,\n  getCreditsById,\n  getReviewsById,\n};\n"],"names":["movieId","useParams","useState","data","setData","loading","setLoading","useEffect","getReviewsById","then","results","catch","err","console","error","length","map","id","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","options","method","headers","accept","Authorization","getTrendingMovies","fetch","json","getSearchMovies","query","getMovieById","getCreditsById"],"sourceRoot":""}