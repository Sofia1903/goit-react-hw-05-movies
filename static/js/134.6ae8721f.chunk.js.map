{"version":3,"file":"static/js/134.6ae8721f.chunk.js","mappings":"uQAAA,IAAMA,EAAM,gCAENC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGOC,EAAiB,WAC5B,IAAMC,EAAG,UAAMP,EAAN,mCAIT,OAFaQ,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAG1C,EACYC,EAAe,SAAAC,GAC1B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,mBAIT,OAFaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAG1C,EAEYG,EAAoB,SAAAD,GAC/B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,2BAGT,OADaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,EACYI,EAAoB,SAAAF,GAC/B,IAAMN,EAAG,UAAMP,EAAN,iBAAkBa,EAAlB,kCAGT,OADaL,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,EAEYK,EAAiB,SAAAC,GAC5B,IAAMV,EAAG,UAAMP,EAAN,8BAA+BiB,EAA/B,8CAGT,OADaT,MAAMD,EAAKN,GAASQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GAE1C,C,2DC/BD,IATkB,SAAC,GAAa,IAAZO,EAAW,EAAXA,MACVC,GAAWC,EAAAA,EAAAA,MACjB,OACA,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAML,IAAMS,MAAO,CAAEC,KAAMJ,GAAhD,SACKD,EAAMM,cAAgBN,EAAMM,cAAgBN,EAAMO,gBAG1D,C,sFCuDD,UA5De,WACb,OAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BL,EAAAA,EAAAA,UAASI,EAAYE,IAAI,UAAnD,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BR,EAAAA,EAAAA,UAASI,EAAYE,IAAI,UAAY,IAA/D,eAAOG,EAAP,KAAcC,EAAd,KAEAC,QAAQC,IAAR,cAA2BX,GAC3BU,QAAQC,IAAR,gBAA6BR,GAC7BO,QAAQC,IAAR,UAAuBH,IAIvBI,EAAAA,EAAAA,YAAU,WACJN,IACFjB,EAAAA,EAAAA,IAAeiB,GACZxB,MAAK,SAAA+B,GACJZ,EAAaY,EAAKC,QACnB,IACAC,OAAM,SAAAC,GACLN,QAAQC,IAAIK,EACb,GAEN,GAAE,CAACV,EAAMF,IAYV,OACE,iCACE,kBACEa,SAAU,SAAAC,IAbK,SAAAA,GACnBA,EAAMC,iBACNf,EAAe,CAAEE,MAAOE,IACxBD,EAASC,EACV,CAUOY,CAAaF,EACd,EAHH,WAKE,kBACEG,YAAY,eACZC,KAAK,QACLd,MAAOA,EACPe,SAfa,SAAAL,GACnBT,EAASS,EAAMM,OAAOhB,MACvB,KAeK,mBAAQiB,KAAK,SAAb,uBAEDzB,IACC,wBACGA,EAAU0B,KAAI,SAAAnC,GAAK,OAClB,SAAC,IAAD,CAAWA,MAAOA,GAAYA,EAAML,GADlB,QAO7B,C","sources":["api/API.jsx","components/Movie/MovieLink.jsx","pages/Movies.jsx"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMDY5NDYxNzVhYmE4NGVjMWZlYjNhNjAzNWVmZGI0ZCIsInN1YiI6IjY0ODhiNzRmOTkyNTljMDBmZjEwOGVhOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.W8hYuQw3SpaFp3KuXamF2ZGzm3w0X0SsPIxY8a5WkFQ',\n  },\n};\nexport const getTrendingAll = () => {\n  const url = `${URL}trending/all/day?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n\n  return data;\n};\nexport const getMovieById = id => {\n  const url = `${URL}movie/${id}?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n\n  return data;\n};\n\nexport const getMovieIdCredits = id => {\n  const url = `${URL}movie/${id}/credits?language=en-US`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};\nexport const getMovieIdReviews = id => {\n  const url = `${URL}movie/${id}/reviews?language=en-US&page=1`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};\n\nexport const getSearchMovie = search => {\n  const url = `${URL}search/movie?query=${search}&include_adult=false&language=en-US&page=1`;\n\n  const data = fetch(url, options).then(res => res.json());\n  return data;\n};","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\nconst MovieLink = ({movie}) => {\n    const location = useLocation();\n    return (\n    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        {movie.original_name ? movie.original_name : movie.original_title}\n    </Link>\n    )\n}\n\nexport default MovieLink","import { getSearchMovie } from 'api/API';\nimport MovieLink from 'components/Movie/MovieLink';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const [query, setQuery] = useState(searchQuery.get('query'))\n  const [value, setValue] = useState(searchQuery.get('query') || '');\n\n  console.log(`MovieList: `, movieList);\n  console.log(`searchQuery: `, searchQuery);\n  console.log(`value: `, value);\n\n \n\n  useEffect(() => {\n    if (query) {\n      getSearchMovie(query)\n        .then(data => {\n          setMovieList(data.results);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  }, [query,setSearchQuery]);\n\n  const handleSubmit = event => {\n    event.preventDefault(); \n    setSearchQuery({ query: value  });   \n    setQuery(value)\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={event => {\n          handleSubmit(event);\n        }}\n      >\n        <input\n          plaseholder=\"Search movie\"\n          name=\"query\"\n          value={value}\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {movieList && (\n        <ul>\n          {movieList.map(movie => (\n            <MovieLink movie={movie} key={movie.id} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["URL","options","method","headers","accept","Authorization","getTrendingAll","url","fetch","then","res","json","getMovieById","id","getMovieIdCredits","getMovieIdReviews","getSearchMovie","search","movie","location","useLocation","to","state","from","original_name","original_title","useState","movieList","setMovieList","useSearchParams","searchQuery","setSearchQuery","get","query","setQuery","value","setValue","console","log","useEffect","data","results","catch","err","onSubmit","event","preventDefault","handleSubmit","plaseholder","name","onChange","target","type","map"],"sourceRoot":""}