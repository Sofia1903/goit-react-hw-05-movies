{"version":3,"file":"static/js/247.9f253874.chunk.js","mappings":"8LAuDA,UAjDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXE,EAAAA,EAAAA,IAAeR,GACZS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAQM,GACRJ,GAAW,EACZ,IACAK,OAAM,SAAAC,GACLC,QAAQC,MAAM,SAAUF,GACxBN,GAAW,EACZ,GACJ,GAAE,CAACN,KAGF,8BACGK,GACC,uCAEA,8BACGF,EAAKY,OAAS,GACb,wBACGZ,EAAKa,KAAI,WAAwCC,GAAW,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAC7BC,EAAMH,EAAY,0CACeA,GA/BvC,4JAiCA,OACE,2BACE,gBAAKI,MAAM,MAAMC,IAAG,UAAKF,GAAOG,IAAI,MACpC,uBAAIL,KACJ,uCAAeC,OAHjB,UAAYH,EAAZ,YAAkBD,GAMrB,OAGH,qDAMX,C,sBCrDD,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOrB,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO1B,KAAKqB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOnB,GACdc,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASnB,EACnE,CAEAkB,OAAMe,EACR,GACF,CACF,C,uJClCMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAiB,6BAAG,oGACLC,MACjB,iEACAN,GAHsB,cAClB3C,EADkB,yBAKjBA,EAAKkD,QALY,2CAAH,qDAQjBC,EAAe,6BAAG,WAAMC,GAAN,uFACHH,MAAM,mDAAD,OAC6BG,EAD7B,8CAEtBT,GAHoB,cAChB3C,EADgB,yBAKfA,EAAKkD,QALU,2CAAH,sDAQfG,EAAY,6BAAG,WAAMxD,GAAN,uFACAoD,MAAM,sCAAD,OACgBpD,EADhB,mBAEtB8C,GAHiB,cACb3C,EADa,yBAKZA,EAAKkD,QALO,2CAAH,sDAQZ7C,EAAc,6BAAG,WAAMR,GAAN,uFACFoD,MAAM,sCAAD,OACgBpD,EADhB,2BAEtB8C,GAHmB,cACf3C,EADe,yBAKdA,EAAKkD,QALS,2CAAH,sDAQdI,EAAc,6BAAG,WAAMzD,GAAN,uFACFoD,MAAM,sCAAD,OACgBpD,EADhB,kCAEtB8C,GAHmB,cACf3C,EADe,yBAKdA,EAAKkD,QALS,2CAAH,qD","sources":["components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/FetchApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsById } from 'service/FetchApi';\n\nconst defaultImg = `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [data, setdata] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCreditsById(movieId)\n      .then(({ cast }) => {\n        setdata(cast);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error:', err);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {data.length > 0 ? (\n            <ul>\n              {data.map(({ id, profile_path, name, character }, index) => {\n                const IMG = profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : defaultImg;\n                return (\n                  <li key={`${id}_${index}`}>\n                    <img width=\"100\" src={`${IMG}`} alt=\"\" />\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p>No cast members found.</p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NWE3MTViMjhiYzlhNTc2ZWQ2MzkzZjYzYjllMjlmOCIsInN1YiI6IjY0N2ZhYTRlY2E3ZWM2MDEzOTAwNDkzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4uBK7cn8JGhy1huwgClr31nT-u15Nkxz-Rq5SsBaK6g',\n  },\n};\n\nconst getTrendingMovies = async () => {\n  const data = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n  return data.json();\n};\n\nconst getSearchMovies = async query => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return data.json();\n};\n\nconst getMovieById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  return data.json();\n};\n\nconst getCreditsById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return data.json();\n};\n\nconst getReviewsById = async movieId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return data.json();\n};\n\nexport {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieById,\n  getCreditsById,\n  getReviewsById,\n};\n"],"names":["movieId","useParams","useState","data","setdata","loading","setLoading","useEffect","getCreditsById","then","cast","catch","err","console","error","length","map","index","id","profile_path","name","character","IMG","width","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","options","method","headers","accept","Authorization","getTrendingMovies","fetch","json","getSearchMovies","query","getMovieById","getReviewsById"],"sourceRoot":""}